"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/openrouter.ts":
/*!*******************************!*\
  !*** ./src/lib/openrouter.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTasksFromDocument: function() { return /* binding */ extractTasksFromDocument; }\n/* harmony export */ });\nconst OPENROUTER_API_KEY = \"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\";\nconst API_URL = \"https://openrouter.ai/api/v1/chat/completions\";\n// Helper function to clean and parse JSON\nfunction cleanAndParseJSON(jsonString) {\n    // Remove any text before the first '[' and after the last ']'\n    const jsonStartIndex = jsonString.indexOf(\"[\");\n    const jsonEndIndex = jsonString.lastIndexOf(\"]\") + 1;\n    if (jsonStartIndex === -1 || jsonEndIndex === 0) {\n        console.error(\"No valid JSON array found\");\n        return [];\n    }\n    const cleanedJson = jsonString.slice(jsonStartIndex, jsonEndIndex).trim();\n    try {\n        return JSON.parse(cleanedJson);\n    } catch (error) {\n        console.error(\"JSON Parsing Error:\", error);\n        console.error(\"Problematic JSON string:\", cleanedJson);\n        return [];\n    }\n}\nasync function extractTasksFromDocument(document) {\n    if (!OPENROUTER_API_KEY) {\n        console.error(\"OpenRouter API key is not set\");\n        return [];\n    }\n    try {\n        const response = await fetch(API_URL, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \".concat(OPENROUTER_API_KEY)\n            },\n            body: JSON.stringify({\n                model: \"deepseek/deepseek-r1-distill-llama-70b:free\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: 'Extract tasks from the document. \\n            Provide ONLY a JSON array with each task having a \"title\" and \"description\". \\n            Do NOT include any additional text or explanation.\\n            Example:\\n            [\\n              {\\n                \"title\": \"Task 1 Title\",\\n                \"description\": \"Task 1 Description\"\\n              },\\n              {\\n                \"title\": \"Task 2 Title\", \\n                \"description\": \"Task 2 Description\"\\n              }\\n            ]'\n                    },\n                    {\n                        role: \"user\",\n                        content: \"Extract tasks from this document: \".concat(document)\n                    }\n                ]\n            })\n        });\n        if (!response.ok) {\n            const errorBody = await response.text();\n            console.error(\"OpenRouter API Error:\", response.status, errorBody);\n            return [];\n        }\n        const data = await response.json();\n        // Validate the response\n        if (!data.choices || !data.choices[0] || !data.choices[0].message) {\n            console.error(\"Invalid API response structure\", data);\n            return [];\n        }\n        // Try to parse the content\n        const content = data.choices[0].message.content;\n        const tasks = cleanAndParseJSON(content);\n        // Validate tasks array\n        if (!Array.isArray(tasks)) {\n            console.error(\"Parsed content is not an array\", tasks);\n            return [];\n        }\n        // Validate each task\n        return tasks.filter((task)=>task && typeof task.title === \"string\" && typeof task.description === \"string\");\n    } catch (error) {\n        console.error(\"Error extracting tasks:\", error);\n        return [];\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvb3BlbnJvdXRlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEscUJBQXFCQywyRUFBMEM7QUFDckUsTUFBTUcsVUFBVTtBQUVoQiwwQ0FBMEM7QUFDMUMsU0FBU0Msa0JBQWtCQyxVQUFrQjtJQUMzQyw4REFBOEQ7SUFDOUQsTUFBTUMsaUJBQWlCRCxXQUFXRSxPQUFPLENBQUM7SUFDMUMsTUFBTUMsZUFBZUgsV0FBV0ksV0FBVyxDQUFDLE9BQU87SUFFbkQsSUFBSUgsbUJBQW1CLENBQUMsS0FBS0UsaUJBQWlCLEdBQUc7UUFDL0NFLFFBQVFDLEtBQUssQ0FBQztRQUNkLE9BQU8sRUFBRTtJQUNYO0lBRUEsTUFBTUMsY0FBY1AsV0FBV1EsS0FBSyxDQUFDUCxnQkFBZ0JFLGNBQWNNLElBQUk7SUFFdkUsSUFBSTtRQUNGLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ0o7SUFDcEIsRUFBRSxPQUFPRCxPQUFPO1FBQ2RELFFBQVFDLEtBQUssQ0FBQyx1QkFBdUJBO1FBQ3JDRCxRQUFRQyxLQUFLLENBQUMsNEJBQTRCQztRQUMxQyxPQUFPLEVBQUU7SUFDWDtBQUNGO0FBRU8sZUFBZUsseUJBQXlCQyxRQUFnQjtJQUM3RCxJQUFJLENBQUNuQixvQkFBb0I7UUFDdkJXLFFBQVFDLEtBQUssQ0FBQztRQUNkLE9BQU8sRUFBRTtJQUNYO0lBRUEsSUFBSTtRQUNGLE1BQU1RLFdBQVcsTUFBTUMsTUFBTWpCLFNBQVM7WUFDcENrQixRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO2dCQUNoQixpQkFBaUIsVUFBNkIsT0FBbkJ2QjtZQUM3QjtZQUNBd0IsTUFBTVIsS0FBS1MsU0FBUyxDQUFDO2dCQUNuQkMsT0FBTztnQkFDUEMsVUFBVTtvQkFDUjt3QkFDRUMsTUFBTTt3QkFDTkMsU0FBVTtvQkFjWjtvQkFDQTt3QkFDRUQsTUFBTTt3QkFDTkMsU0FBUyxxQ0FBOEMsT0FBVFY7b0JBQ2hEO2lCQUNEO1lBQ0g7UUFDRjtRQUVBLElBQUksQ0FBQ0MsU0FBU1UsRUFBRSxFQUFFO1lBQ2hCLE1BQU1DLFlBQVksTUFBTVgsU0FBU1ksSUFBSTtZQUNyQ3JCLFFBQVFDLEtBQUssQ0FBQyx5QkFBeUJRLFNBQVNhLE1BQU0sRUFBRUY7WUFDeEQsT0FBTyxFQUFFO1FBQ1g7UUFFQSxNQUFNRyxPQUFPLE1BQU1kLFNBQVNlLElBQUk7UUFFaEMsd0JBQXdCO1FBQ3hCLElBQUksQ0FBQ0QsS0FBS0UsT0FBTyxJQUFJLENBQUNGLEtBQUtFLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQ0YsS0FBS0UsT0FBTyxDQUFDLEVBQUUsQ0FBQ0MsT0FBTyxFQUFFO1lBQ2pFMUIsUUFBUUMsS0FBSyxDQUFDLGtDQUFrQ3NCO1lBQ2hELE9BQU8sRUFBRTtRQUNYO1FBRUEsMkJBQTJCO1FBQzNCLE1BQU1MLFVBQVVLLEtBQUtFLE9BQU8sQ0FBQyxFQUFFLENBQUNDLE9BQU8sQ0FBQ1IsT0FBTztRQUMvQyxNQUFNUyxRQUFRakMsa0JBQWtCd0I7UUFFaEMsdUJBQXVCO1FBQ3ZCLElBQUksQ0FBQ1UsTUFBTUMsT0FBTyxDQUFDRixRQUFRO1lBQ3pCM0IsUUFBUUMsS0FBSyxDQUFDLGtDQUFrQzBCO1lBQ2hELE9BQU8sRUFBRTtRQUNYO1FBRUEscUJBQXFCO1FBQ3JCLE9BQU9BLE1BQU1HLE1BQU0sQ0FBQ0MsQ0FBQUEsT0FDbEJBLFFBQ0EsT0FBT0EsS0FBS0MsS0FBSyxLQUFLLFlBQ3RCLE9BQU9ELEtBQUtFLFdBQVcsS0FBSztJQUVoQyxFQUFFLE9BQU9oQyxPQUFPO1FBQ2RELFFBQVFDLEtBQUssQ0FBQywyQkFBMkJBO1FBQ3pDLE9BQU8sRUFBRTtJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9vcGVucm91dGVyLnRzPzM3OWEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgT1BFTlJPVVRFUl9BUElfS0VZID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfT1BFTlJPVVRFUl9BUElfS0VZO1xuY29uc3QgQVBJX1VSTCA9ICdodHRwczovL29wZW5yb3V0ZXIuYWkvYXBpL3YxL2NoYXQvY29tcGxldGlvbnMnO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY2xlYW4gYW5kIHBhcnNlIEpTT05cbmZ1bmN0aW9uIGNsZWFuQW5kUGFyc2VKU09OKGpzb25TdHJpbmc6IHN0cmluZyk6IGFueSB7XG4gIC8vIFJlbW92ZSBhbnkgdGV4dCBiZWZvcmUgdGhlIGZpcnN0ICdbJyBhbmQgYWZ0ZXIgdGhlIGxhc3QgJ10nXG4gIGNvbnN0IGpzb25TdGFydEluZGV4ID0ganNvblN0cmluZy5pbmRleE9mKCdbJyk7XG4gIGNvbnN0IGpzb25FbmRJbmRleCA9IGpzb25TdHJpbmcubGFzdEluZGV4T2YoJ10nKSArIDE7XG4gIFxuICBpZiAoanNvblN0YXJ0SW5kZXggPT09IC0xIHx8IGpzb25FbmRJbmRleCA9PT0gMCkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ05vIHZhbGlkIEpTT04gYXJyYXkgZm91bmQnKTtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBjb25zdCBjbGVhbmVkSnNvbiA9IGpzb25TdHJpbmcuc2xpY2UoanNvblN0YXJ0SW5kZXgsIGpzb25FbmRJbmRleCkudHJpbSgpO1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoY2xlYW5lZEpzb24pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0pTT04gUGFyc2luZyBFcnJvcjonLCBlcnJvcik7XG4gICAgY29uc29sZS5lcnJvcignUHJvYmxlbWF0aWMgSlNPTiBzdHJpbmc6JywgY2xlYW5lZEpzb24pO1xuICAgIHJldHVybiBbXTtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXh0cmFjdFRhc2tzRnJvbURvY3VtZW50KGRvY3VtZW50OiBzdHJpbmcpIHtcbiAgaWYgKCFPUEVOUk9VVEVSX0FQSV9LRVkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdPcGVuUm91dGVyIEFQSSBrZXkgaXMgbm90IHNldCcpO1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChBUElfVVJMLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7T1BFTlJPVVRFUl9BUElfS0VZfWAsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBtb2RlbDogJ2RlZXBzZWVrL2RlZXBzZWVrLXIxLWRpc3RpbGwtbGxhbWEtNzBiOmZyZWUnLFxuICAgICAgICBtZXNzYWdlczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHJvbGU6ICdzeXN0ZW0nLFxuICAgICAgICAgICAgY29udGVudDogYEV4dHJhY3QgdGFza3MgZnJvbSB0aGUgZG9jdW1lbnQuIFxuICAgICAgICAgICAgUHJvdmlkZSBPTkxZIGEgSlNPTiBhcnJheSB3aXRoIGVhY2ggdGFzayBoYXZpbmcgYSBcInRpdGxlXCIgYW5kIFwiZGVzY3JpcHRpb25cIi4gXG4gICAgICAgICAgICBEbyBOT1QgaW5jbHVkZSBhbnkgYWRkaXRpb25hbCB0ZXh0IG9yIGV4cGxhbmF0aW9uLlxuICAgICAgICAgICAgRXhhbXBsZTpcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCJUYXNrIDEgVGl0bGVcIixcbiAgICAgICAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiVGFzayAxIERlc2NyaXB0aW9uXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwidGl0bGVcIjogXCJUYXNrIDIgVGl0bGVcIiwgXG4gICAgICAgICAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlRhc2sgMiBEZXNjcmlwdGlvblwiXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1gXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICByb2xlOiAndXNlcicsXG4gICAgICAgICAgICBjb250ZW50OiBgRXh0cmFjdCB0YXNrcyBmcm9tIHRoaXMgZG9jdW1lbnQ6ICR7ZG9jdW1lbnR9YFxuICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgICAgfSlcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IGVycm9yQm9keSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ09wZW5Sb3V0ZXIgQVBJIEVycm9yOicsIHJlc3BvbnNlLnN0YXR1cywgZXJyb3JCb2R5KTtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIFxuICAgIC8vIFZhbGlkYXRlIHRoZSByZXNwb25zZVxuICAgIGlmICghZGF0YS5jaG9pY2VzIHx8ICFkYXRhLmNob2ljZXNbMF0gfHwgIWRhdGEuY2hvaWNlc1swXS5tZXNzYWdlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdJbnZhbGlkIEFQSSByZXNwb25zZSBzdHJ1Y3R1cmUnLCBkYXRhKTtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICAvLyBUcnkgdG8gcGFyc2UgdGhlIGNvbnRlbnRcbiAgICBjb25zdCBjb250ZW50ID0gZGF0YS5jaG9pY2VzWzBdLm1lc3NhZ2UuY29udGVudDtcbiAgICBjb25zdCB0YXNrcyA9IGNsZWFuQW5kUGFyc2VKU09OKGNvbnRlbnQpO1xuXG4gICAgLy8gVmFsaWRhdGUgdGFza3MgYXJyYXlcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodGFza3MpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdQYXJzZWQgY29udGVudCBpcyBub3QgYW4gYXJyYXknLCB0YXNrcyk7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgZWFjaCB0YXNrXG4gICAgcmV0dXJuIHRhc2tzLmZpbHRlcih0YXNrID0+IFxuICAgICAgdGFzayAmJiBcbiAgICAgIHR5cGVvZiB0YXNrLnRpdGxlID09PSAnc3RyaW5nJyAmJiBcbiAgICAgIHR5cGVvZiB0YXNrLmRlc2NyaXB0aW9uID09PSAnc3RyaW5nJ1xuICAgICk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZXh0cmFjdGluZyB0YXNrczonLCBlcnJvcik7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59Il0sIm5hbWVzIjpbIk9QRU5ST1VURVJfQVBJX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19PUEVOUk9VVEVSX0FQSV9LRVkiLCJBUElfVVJMIiwiY2xlYW5BbmRQYXJzZUpTT04iLCJqc29uU3RyaW5nIiwianNvblN0YXJ0SW5kZXgiLCJpbmRleE9mIiwianNvbkVuZEluZGV4IiwibGFzdEluZGV4T2YiLCJjb25zb2xlIiwiZXJyb3IiLCJjbGVhbmVkSnNvbiIsInNsaWNlIiwidHJpbSIsIkpTT04iLCJwYXJzZSIsImV4dHJhY3RUYXNrc0Zyb21Eb2N1bWVudCIsImRvY3VtZW50IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5Iiwic3RyaW5naWZ5IiwibW9kZWwiLCJtZXNzYWdlcyIsInJvbGUiLCJjb250ZW50Iiwib2siLCJlcnJvckJvZHkiLCJ0ZXh0Iiwic3RhdHVzIiwiZGF0YSIsImpzb24iLCJjaG9pY2VzIiwibWVzc2FnZSIsInRhc2tzIiwiQXJyYXkiLCJpc0FycmF5IiwiZmlsdGVyIiwidGFzayIsInRpdGxlIiwiZGVzY3JpcHRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/openrouter.ts\n"));

/***/ })

});